参数
1.展现的区域Rect
2.原图要被展现的区域Rect，可省，省略时则表示整张图
3.路径
4.控件ID，当传入相同控件时则会替换，如果传入不同控件ID，则会同时存在
5.层数，数字越大越前，数字相同时，谁后执行谁在上面

删除之后则出现底下的图片


实现方法

1.存储属性
传入一个控件之后按照ID进行记录，使用二维数组，函数表示层数，每行内都是struct结构体，1.路径，2.窗口显示区域，3.图片展示区域，3个属性，同行的话则在后面添加
返回值返回二维数组中最后一个有效的行和列，使用点结构体，.x为前一个，.y为后一个

2.循环绘图
之后按照第一行第一个，进行绘图，然后第一行第二个，第一行第三个，遇到0后变成第二行第一个，第二行第二个，直到给定值结束



初始化的时候路径为""，而被删除之后路径改为"-1"，从而不影响换行绘图

 1   3   2   4
100 101 102 103
     xy


调用方式，不可以放在窗口未被创建的初始化函数里，必须等父窗口完全创建之后才可以使用，可以利用多线程，开线程之后先Sleep
	CDrawPicture Picture1(this);
	
	//窗口缺省，图片缺省，全大小展示
	Picture1.SetPicture(IDC_PICTURE ,0,"D:\\1.jpg",CRect(0,0, -1, -1));

	//窗口缺省，图片限定，完全展示图片的某个区域
	Picture1.SetPicture(IDC_PICTURE ,0,"D:\\1.jpg",CRect(0,0, -1, -1),CRect(0,0,100,100));

	//窗口限定，图片缺省，缩小化或放大化
	Picture1.SetPicture(IDC_PICTURE ,0,"D:\\1.jpg",CRect(0,0,200,200));

	//窗口限定，图片限定，将图片的某个部分按照确定大小放在某个展示区的某个位置，一般用于图标集合图片抠图放置在对应位置上
	Picture1.SetPicture(IDC_PICTURE ,0,"D:\\1.jpg",CRect(0,0, 50, 50),CRect(0,0,100,100));
	
	//移除某个ID的图片
	Picture1.ReMovePicture(IDC_PICTURE);

	//开始绘画，一般一张图画0.05秒
	Picture1.Draw();