//选择CDC是因为CDC类有绘画功能
    CDC memDC;
    //在对象中创建和屏幕dc兼容的内存显示设备
    memDC.CreateCompatibleDC(dstHDC);
    //创建一个内屏幕dc兼容的画板
    HBITMAP picBoard = ::CreateCompatibleBitmap(dstHDC, rectClient.GetWidth(), rectClient.GetHeight());
    //这里如果没有可传的dstHDC传NULL时，创建的兼容画板位深度是1，是不能用的，应该换用下面这行指定位深度32或24
    //HBITMAP picBoard = ::CreateBitmap(width, height, 1, 32, NULL);
    //显示设备选择画板
    HBITMAP OldBit = memDC.SelectBitmap(picBoard);
    //必须在选择了画板之后才可以画
    memDC.FillSolidRect(&((RECT)rectClient), bkColor);

    //直接加载图片就不需要用CDC画图了，获取内存显示设备句柄即可
    HDC picHDC = ::CreateCompatibleDC(dstHDC);
    //获取单个图片内容
    HBITMAP picHBITMAP = ::CreateBitmap(m_vecApng.at(cPicNum).m_w, m_vecApng.at(cPicNum).m_h, 1, 32, m_vecApng.at(cPicNum).m_p);
    //如果不画图，直接选择图片到设备句柄即可
    ::SelectObject(picHDC, picHBITMAP);

    BLENDFUNCTION bindfun;
    //表示把图覆盖到之前的背景上，必须填这个值
    bindfun.BlendOp = AC_SRC_OVER;
    //必须填这个值
    bindfun.BlendFlags = 0;
    //静态图则为透明度，0是透明，255不透明，动图必须255，否则会有重影
    bindfun.SourceConstantAlpha = 255;
    //还可以填0，表示不绘制透明图层，和TransparentBlt类似，1表示绘制透明图层
    bindfun.AlphaFormat = 1;

    int cLeft = int(m_vecApng.at(cPicNum).m_x);
    int cTop = int(m_vecApng.at(cPicNum).m_y);
    int cRight = int((cLeft + m_vecApng.at(cPicNum).m_w));
    int cBottom = int((cTop + m_vecApng.at(cPicNum).m_h));

    if (m_zoom == 1)
    {
        ::AlphaBlend(memDC.m_hDC, int(cLeft * m_multiple), int(cTop * m_multiple), int(cRight * m_multiple), int(cBottom * m_multiple), picHDC, cLeft, cTop, cRight, cBottom, bindfun);
    }
    else if (m_zoom == 2)
    {
        ::AlphaBlend(memDC.m_hDC, m_picRect.m_left, m_picRect.m_top, m_picRect.m_right, m_picRect.m_bottom, picHDC, cLeft, cTop, cRight, cBottom, bindfun);

    }
    //AlphaBlend只能绘制32位图，填充背景之后不能再有透明通道
    ::TransparentBlt(dstHDC, rectClient.m_left, rectClient.m_top, rectClient.m_right, rectClient.m_bottom, memDC.m_hDC, rectClient.m_left, rectClient.m_top, rectClient.m_right, rectClient.m_bottom, SRCCOPY);

    m_isDraw = true;
    //不释放会有内存泄漏，必须使用DeleteDC不能用ReleaseDC，否则后面的同HBITMAP绘图都上不去，但是重新加载图片是可以的
    ::DeleteDC(memDC.m_hDC);
    ::DeleteDC(picHDC);